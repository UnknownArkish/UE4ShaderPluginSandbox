#include "/Engine/Public/Platform.ush"

uint NumVertex;
RWBuffer<float> OutPositionVertexBuffer;

[numthreads(32, 1, 1)]
void MainCS(uint2 DispatchThreadId : SV_DispatchThreadID)
{
    const uint VertexIndex = DispatchThreadId.x;

    if (VertexIndex < NumVertex)
    {
        const float X = OutPositionVertexBuffer[3 * VertexIndex];
        const float Y = OutPositionVertexBuffer[3 * VertexIndex + 1];
        const float Z = OutPositionVertexBuffer[3 * VertexIndex + 2];
        OutPositionVertexBuffer[3 * VertexIndex] = X;
        OutPositionVertexBuffer[3 * VertexIndex + 1] = Y;
        OutPositionVertexBuffer[3 * VertexIndex + 2] = 30.0 + 20.0 * sin(VertexIndex * 0.1 * 3.14);
    }
}
